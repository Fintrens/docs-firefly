# .github/workflows/build-deploy.yml
name: Build & Deploy

on:
  push:
    branches:
      - 'feature/**'
      - 'master'
  workflow_dispatch:

concurrency:
  group: deploy-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: docs
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node 16.16.0
        uses: actions/setup-node@v4
        with:
          node-version: '16.16.0'
          cache: npm
          cache-dependency-path: docs/package-lock.json

      - name: Install deps
        run: npm ci

      - name: Build (prod)
        run: npm run build

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: site-dist
          # If your build outputs to docs/.vuepress/dist (typical):
          path: docs/.vuepress/dist
          # If your project truly outputs to docs/src/.vuepress/dist, switch back.
          if-no-files-found: error
          retention-days: 3

  deploy:
    needs: build
    if: ${{ github.ref_name == 'master' || startsWith(github.ref_name, 'feature/') }}
    runs-on: ubuntu-latest

    environment:
      name: ${{ github.ref_name == 'master' && 'prod' || 'qa' }}

    env:
      SSH_HOST: ${{ github.ref_name == 'master' && secrets.SSH_HOST_PROD || secrets.SSH_HOST_QA }}
      SSH_USER: ${{ github.ref_name == 'master' && secrets.SSH_USER_PROD || secrets.SSH_USER_QA }}
      SSH_PORT: ${{ github.ref_name == 'master' && secrets.SSH_PORT_PROD || secrets.SSH_PORT_QA }}
      SSH_PRIVATE_KEY: ${{ github.ref_name == 'master' && secrets.SSH_PRIVATE_KEY_PROD || secrets.SSH_PRIVATE_KEY_QA }}
      REMOTE_PATH: ${{ github.ref_name == 'master' && secrets.REMOTE_PATH_PROD || secrets.REMOTE_PATH_QA }}

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: site-dist
          path: dist

      - name: Setup SSH agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ env.SSH_PRIVATE_KEY }}

      - name: Trust server host key
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H -p "${SSH_PORT:-22}" "$SSH_HOST" >> ~/.ssh/known_hosts

      - name: Ensure remote dir exists
        run: ssh -p "${SSH_PORT:-22}" "$SSH_USER@$SSH_HOST" "mkdir -p '${REMOTE_PATH}'"

      - name: Rsync deploy
        run: |
          rsync -rltvz --delete-delay \
            -e "ssh -p ${SSH_PORT:-22}" \
            dist/ "$SSH_USER@$SSH_HOST:${REMOTE_PATH}/"

      - name: Reload nginx
        run: |
          ssh -p "${SSH_PORT:-22}" "$SSH_USER@$SSH_HOST" 'sudo nginx -t && sudo systemctl reload nginx'
